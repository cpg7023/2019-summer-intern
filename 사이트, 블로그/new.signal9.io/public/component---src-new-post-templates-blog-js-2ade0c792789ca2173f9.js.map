{"version":3,"sources":["webpack:///./src/newPost/templates/blog.js"],"names":["styled","div","withConfig","displayName","componentId","BlogPage","render","_this$props","this","props","data","location","pageContext","_data$site$siteMetada","site","siteMetadata","title","pageListSize","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","_blog_components_header__WEBPACK_IMPORTED_MODULE_4__","_templates_sideLayout__WEBPACK_IMPORTED_MODULE_5__","_seo__WEBPACK_IMPORTED_MODULE_7__","keywords","className","style","margin-right","flexDirection","alignItems","_organisms_postList__WEBPACK_IMPORTED_MODULE_6__","page","path","_blog_components_footer__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery"],"mappings":"4NAUaA,IAAOC,IAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,iIAAV,IAWMK,kLACFC,OAAA,WAAS,IAAAC,EACmCC,KAAKC,MAArCC,EADHH,EACGG,KAAMC,EADTJ,EACSI,SAAUC,EADnBL,EACmBK,YADnBC,EAE2BH,EAAKI,KAAKC,aAAlCC,EAFHH,EAEGG,MAAOC,EAFVJ,EAEUI,aACTC,EAAQR,EAAKS,kBAAkBC,MAErC,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,MACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYf,SAAUA,EAAUK,MAAOA,GACnCK,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKX,MAAM,OAAOY,SAAU,yCAC5BP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,YAAYC,MAAO,CAACC,eAAgB,IAAKC,cAAe,SAAUC,WAAY,WACzFZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACIxB,KAAMQ,EACNiB,KAAMvB,EACNwB,KAAM,QACNnB,aAAcA,MAI1BI,EAAAC,EAAAC,cAACc,EAAA,EAAD,WApBOC,IAAMC,WA0BdlC,YAER,IAAMmC,EAAS","file":"component---src-new-post-templates-blog-js-2ade0c792789ca2173f9.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport { graphql, Link } from 'gatsby'\r\nimport Footer from \"../../blog_components/footer\"\r\nimport Header from \"../../blog_components/header\"\r\nimport SideLayout from \"../templates/sideLayout\";\r\nimport PostList from \"../organisms/postList\";\r\nimport SEO from \"../seo\";\r\n\r\n\r\nconst Main = styled.div`\r\n    margin-top: 50px;\r\n    margin-left: 0;\r\n    margin-right: 20px;\r\n    @media all and (min-width: 992px) {\r\n        margin-top: 0;\r\n        margin-left: 20px !important;\r\n    }\r\n`;\r\n\r\n//const BlogPage = () =>{\r\nclass BlogPage extends React.Component {\r\n    render() {\r\n        const { data, location, pageContext } = this.props;\r\n        const { title, pageListSize } = data.site.siteMetadata;\r\n        const posts = data.allMarkdownRemark.edges;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <SideLayout location={location} title={title}>\r\n                    <SEO title=\"Main\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\r\n                    <div className=\"container\" style={{'margin-right': 280, flexDirection: 'column', alignItems: 'center'}}>\r\n                        <PostList\r\n                            data={posts}\r\n                            page={pageContext}\r\n                            path={\"/blog\"}\r\n                            pageListSize={pageListSize}\r\n                        />\r\n                    </div>\r\n                </SideLayout>\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogPage\r\n\r\nexport const pageQuery = graphql`\r\n    query($skip: Int!, $limit: Int!) {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n                pageListSize\r\n            }\r\n        }\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            skip: $skip\r\n            limit: $limit\r\n        ) {\r\n            edges {\r\n                node {\r\n                    excerpt(pruneLength: 300)\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    frontmatter {\r\n                        date(formatString: \"YYYY-MM-DD\")\r\n                        title\r\n                        category\r\n                        cover {\r\n                            childImageSharp {\r\n                                fixed(width: 120, height: 120) {\r\n                                    ...GatsbyImageSharpFixed\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/newPost/templates/index4Tag.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_seo__WEBPACK_IMPORTED_MODULE_1__","_blog_components_header__WEBPACK_IMPORTED_MODULE_2__","_blog_components_footer__WEBPACK_IMPORTED_MODULE_3__","_organisms_postList__WEBPACK_IMPORTED_MODULE_4__","_sideLayout__WEBPACK_IMPORTED_MODULE_5__","TagsTemplate","_ref","location","pageContext","data","tag","_data$site$siteMetada","site","siteMetadata","pageListSize","title","posts","allMarkdownRemark","edges","a","createElement","Fragment","activeMenu","className","style","margin-right","flexDirection","alignItems","page","path"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAmCaI,EAAS,aAuCPS,UAjEM,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,SAAUC,EAAwBF,EAAxBE,YAAaC,EAAWH,EAAXG,KACrCC,EAAMF,EAAYE,IAD8BC,EAEtBF,EAAKG,KAAKC,aAA3BC,GAFuCH,EAE9CI,MAF8CJ,EAEvCG,cAETE,EAAQP,EAAKQ,kBAAkBC,MAGrC,OACIpB,EAAAqB,EAAAC,cAACtB,EAAAqB,EAAME,SAAP,KACIvB,EAAAqB,EAAAC,cAACnB,EAAA,EAAD,MACAH,EAAAqB,EAAAC,cAAChB,EAAA,EAAD,CAAYG,SAAUA,EAAUQ,MAAK,IAAML,EAAN,YAAsBY,WAPlD,IAQLxB,EAAAqB,EAAAC,cAACpB,EAAA,EAAD,CAAKe,MAAK,IAAML,EAAN,cACVZ,EAAAqB,EAAAC,cAAA,OAAKG,UAAU,YAAYC,MAAO,CAAEC,eAAgB,IAAKC,cAAe,SAAUC,WAAY,WAC1F7B,EAAAqB,EAAAC,cAACjB,EAAA,EAAD,CACIM,KAAMO,EACNY,KAAMpB,EACNqB,KAAI,SAAWnB,EACfI,aAAcA,MAI1BhB,EAAAqB,EAAAC,cAAClB,EAAA,EAAD","file":"component---src-new-post-templates-index-4-tag-js-d497f0243eb443b48f3c.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport SEO from \"../seo\";\r\nimport Header from \"../../blog_components/header\";\r\nimport Footer from \"../../blog_components/footer\";\r\nimport PostList from \"../organisms/postList\";\r\nimport SideLayout from \"./sideLayout\";\r\n\r\n\r\nconst TagsTemplate = ({ location, pageContext, data }) => {\r\n    const tag = pageContext.tag;\r\n    const { title, pageListSize } = data.site.siteMetadata;\r\n    const category = \"\";\r\n    const posts = data.allMarkdownRemark.edges;\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <SideLayout location={location} title={`\"${tag}\" 관련 글 목록`} activeMenu={category}>\r\n                <SEO title={`\"${tag}\" 관련 글 목록`} />\r\n                <div className=\"container\" style={{ 'margin-right': 280, flexDirection: 'column', alignItems: 'center' }}>\r\n                    <PostList\r\n                        data={posts}\r\n                        page={pageContext}\r\n                        path={`/tags/${tag}`}\r\n                        pageListSize={pageListSize}\r\n                    />\r\n                </div>\r\n            </SideLayout>\r\n            <Footer />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n    query($skip: Int!, $limit: Int!, $tag: String) {\r\n        site {\r\n            siteMetadata {\r\n                pageListSize\r\n            }\r\n        }\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            filter: { frontmatter: { tags: { in: [$tag] } } }\r\n            skip: $skip\r\n            limit: $limit\r\n        ) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                    }\r\n                    excerpt(pruneLength: 300)\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"YYYY-MM-DD\")\r\n                        category\r\n                        tags\r\n                        cover {\r\n                            childImageSharp {\r\n                                fixed(width: 120, height: 120) {\r\n                                    ...GatsbyImageSharpFixed\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default TagsTemplate;\r\n"],"sourceRoot":""}